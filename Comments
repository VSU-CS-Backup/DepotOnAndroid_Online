**********************************************************************************
**** Login, logout, and R(ead) through HTTP POST, DELTE, and GET respectively ****
**********************************************************************************
Now, users can login/logout successfully. Also, only those books that are belonging to the user who is currently logged in are displayed.

Pre-created users on depot server (For_DepotOnAndroid_Online) are admin, dave, john, and mary

Files Changed:
1. AndroidManifest.xml -- added the new activity of "ShowSettings"
2. EntrancePage.java -- the "Settings" menu item is now directing you to the "ShowSettings" screen
3. Catalog.java -- an HTTP GET is sent on separate thread to the Depot server requesting ".../products.json". The server responds with those books that belong to the current user. (All books will be displayed for adminr. Also, the three tabs on the screen are created in the response handler (instead of in onCreate as before) upon receipt of a successful response.
4. ...data/CatalogFetcher.java -- if the json response sent back from the server does not contain "popularity", set that attribute to "0".

Files Added:
1. showSettings.xml
2. showSettings.java -- An HTTP POST is sent to the Depot server for user login. An HTTP DELETE is sent to the server for user logout. Preferences are used to convey setting infor. including url, user name, user password, valid or not (legal user or not), in addition to mode that indicates if the client is operating off-line or on-line.

**********************************************************************************
**** U(pdate) through HTTP PUT ****
**********************************************************************************
Files Changed:
1. Product.java -- Upon a click on the update button on the "Product" screen, updateProduct() method is called so as to first update the local JSON file thanks to the replace() method in CatelogFetcher, then send an HTTP PUT message carrying all the new attributes in the forms of "params" to the server.  


**********************************************************************************
**** C(reate) through HTTP POST ****
**********************************************************************************
Files Changed:
1. NewProduct.java -- NewProduct.java has been modified. After the new product is created with a faked -1 id and put in the local JSON file, it is sent to the server as an HTTP POST message. Once the server is done with its business, it sends response back. In particular, such response carries the real id of the new product. The entry of the new product in the local JSON file is updated accordingly then. 
2. .../CatalogFetcher.java -- in create(), a search for the largest id in the local JSON file is not needed anymore. The real id is created by the server.

**********************************************************************************
**** D(elete) through HTTP DELETE ****
**********************************************************************************
Files Changed:
3. Product.java -- An HTTP DELETE massage is sent to the server in addition to delete the product from the local JSON file.
